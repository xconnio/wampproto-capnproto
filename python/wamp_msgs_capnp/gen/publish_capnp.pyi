"""This is an automatically generated stub for `publish.capnp`."""
from __future__ import annotations

from contextlib import contextmanager
from io import BufferedWriter
from typing import Iterator

class Publish:
    requestID: int
    topic: str
    payloadSerializerID: int
    exludeMe: bool
    @staticmethod
    @contextmanager
    def from_bytes(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> Iterator[PublishReader]: ...
    @staticmethod
    def from_bytes_packed(
        data: bytes, traversal_limit_in_words: int | None = ..., nesting_limit: int | None = ...
    ) -> PublishReader: ...
    @staticmethod
    def new_message() -> PublishBuilder: ...
    def to_dict(self) -> dict: ...

class PublishReader(Publish):
    def as_builder(self) -> PublishBuilder: ...

class PublishBuilder(Publish):
    @staticmethod
    def from_dict(dictionary: dict) -> PublishBuilder: ...
    def copy(self) -> PublishBuilder: ...
    def to_bytes(self) -> bytes: ...
    def to_bytes_packed(self) -> bytes: ...
    def to_segments(self) -> list[bytes]: ...
    def as_reader(self) -> PublishReader: ...
    @staticmethod
    def write(file: BufferedWriter) -> None: ...
    @staticmethod
    def write_packed(file: BufferedWriter) -> None: ...
