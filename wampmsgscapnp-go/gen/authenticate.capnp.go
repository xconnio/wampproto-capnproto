// Code generated by capnpc-go. DO NOT EDIT.

package gen

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
)

type Authenticate capnp.Struct

// Authenticate_TypeID is the unique identifier for the type Authenticate.
const Authenticate_TypeID = 0xee32878ba28c7cc2

func NewAuthenticate(s *capnp.Segment) (Authenticate, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Authenticate(st), err
}

func NewRootAuthenticate(s *capnp.Segment) (Authenticate, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Authenticate(st), err
}

func ReadRootAuthenticate(msg *capnp.Message) (Authenticate, error) {
	root, err := msg.Root()
	return Authenticate(root.Struct()), err
}

func (s Authenticate) String() string {
	str, _ := text.Marshal(0xee32878ba28c7cc2, capnp.Struct(s))
	return str
}

func (s Authenticate) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Authenticate) DecodeFromPtr(p capnp.Ptr) Authenticate {
	return Authenticate(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Authenticate) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Authenticate) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Authenticate) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Authenticate) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Authenticate) Signature() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Authenticate) HasSignature() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Authenticate) SignatureBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Authenticate) SetSignature(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// Authenticate_List is a list of Authenticate.
type Authenticate_List = capnp.StructList[Authenticate]

// NewAuthenticate creates a new list of Authenticate.
func NewAuthenticate_List(s *capnp.Segment, sz int32) (Authenticate_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return capnp.StructList[Authenticate](l), err
}

// Authenticate_Future is a wrapper for a Authenticate promised by a client call.
type Authenticate_Future struct{ *capnp.Future }

func (f Authenticate_Future) Struct() (Authenticate, error) {
	p, err := f.Future.Ptr()
	return Authenticate(p.Struct()), err
}
