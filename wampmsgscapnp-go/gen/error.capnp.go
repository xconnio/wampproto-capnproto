// Code generated by capnpc-go. DO NOT EDIT.

package gen

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
)

type Error capnp.Struct

// Error_TypeID is the unique identifier for the type Error.
const Error_TypeID = 0xd6edeb45b4137a8a

func NewError(s *capnp.Segment) (Error, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return Error(st), err
}

func NewRootError(s *capnp.Segment) (Error, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return Error(st), err
}

func ReadRootError(msg *capnp.Message) (Error, error) {
	root, err := msg.Root()
	return Error(root.Struct()), err
}

func (s Error) String() string {
	str, _ := text.Marshal(0xd6edeb45b4137a8a, capnp.Struct(s))
	return str
}

func (s Error) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Error) DecodeFromPtr(p capnp.Ptr) Error {
	return Error(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Error) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Error) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Error) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Error) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Error) MessageType() int64 {
	return int64(capnp.Struct(s).Uint64(0))
}

func (s Error) SetMessageType(v int64) {
	capnp.Struct(s).SetUint64(0, uint64(v))
}

func (s Error) RequestID() int64 {
	return int64(capnp.Struct(s).Uint64(8))
}

func (s Error) SetRequestID(v int64) {
	capnp.Struct(s).SetUint64(8, uint64(v))
}

func (s Error) Uri() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Error) HasUri() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Error) UriBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Error) SetUri(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// Error_List is a list of Error.
type Error_List = capnp.StructList[Error]

// NewError creates a new list of Error.
func NewError_List(s *capnp.Segment, sz int32) (Error_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return capnp.StructList[Error](l), err
}

// Error_Future is a wrapper for a Error promised by a client call.
type Error_Future struct{ *capnp.Future }

func (f Error_Future) Struct() (Error, error) {
	p, err := f.Future.Ptr()
	return Error(p.Struct()), err
}
