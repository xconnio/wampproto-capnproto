// Code generated by capnpc-go. DO NOT EDIT.

package gen

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
)

type Register capnp.Struct

// Register_TypeID is the unique identifier for the type Register.
const Register_TypeID = 0xda7f1660e0e51156

func NewRegister(s *capnp.Segment) (Register, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Register(st), err
}

func NewRootRegister(s *capnp.Segment) (Register, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Register(st), err
}

func ReadRootRegister(msg *capnp.Message) (Register, error) {
	root, err := msg.Root()
	return Register(root.Struct()), err
}

func (s Register) String() string {
	str, _ := text.Marshal(0xda7f1660e0e51156, capnp.Struct(s))
	return str
}

func (s Register) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Register) DecodeFromPtr(p capnp.Ptr) Register {
	return Register(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Register) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Register) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Register) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Register) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Register) RequestID() int64 {
	return int64(capnp.Struct(s).Uint64(0))
}

func (s Register) SetRequestID(v int64) {
	capnp.Struct(s).SetUint64(0, uint64(v))
}

func (s Register) Procedure() (string, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.Text(), err
}

func (s Register) HasProcedure() bool {
	return capnp.Struct(s).HasPtr(0)
}

func (s Register) ProcedureBytes() ([]byte, error) {
	p, err := capnp.Struct(s).Ptr(0)
	return p.TextBytes(), err
}

func (s Register) SetProcedure(v string) error {
	return capnp.Struct(s).SetText(0, v)
}

// Register_List is a list of Register.
type Register_List = capnp.StructList[Register]

// NewRegister creates a new list of Register.
func NewRegister_List(s *capnp.Segment, sz int32) (Register_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return capnp.StructList[Register](l), err
}

// Register_Future is a wrapper for a Register promised by a client call.
type Register_Future struct{ *capnp.Future }

func (f Register_Future) Struct() (Register, error) {
	p, err := f.Future.Ptr()
	return Register(p.Struct()), err
}
