// Code generated by capnpc-go. DO NOT EDIT.

package gen

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
)

type Yield capnp.Struct

// Yield_TypeID is the unique identifier for the type Yield.
const Yield_TypeID = 0x934c3d62b006f8da

func NewYield(s *capnp.Segment) (Yield, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Yield(st), err
}

func NewRootYield(s *capnp.Segment) (Yield, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Yield(st), err
}

func ReadRootYield(msg *capnp.Message) (Yield, error) {
	root, err := msg.Root()
	return Yield(root.Struct()), err
}

func (s Yield) String() string {
	str, _ := text.Marshal(0x934c3d62b006f8da, capnp.Struct(s))
	return str
}

func (s Yield) EncodeAsPtr(seg *capnp.Segment) capnp.Ptr {
	return capnp.Struct(s).EncodeAsPtr(seg)
}

func (Yield) DecodeFromPtr(p capnp.Ptr) Yield {
	return Yield(capnp.Struct{}.DecodeFromPtr(p))
}

func (s Yield) ToPtr() capnp.Ptr {
	return capnp.Struct(s).ToPtr()
}
func (s Yield) IsValid() bool {
	return capnp.Struct(s).IsValid()
}

func (s Yield) Message() *capnp.Message {
	return capnp.Struct(s).Message()
}

func (s Yield) Segment() *capnp.Segment {
	return capnp.Struct(s).Segment()
}
func (s Yield) RequestID() int64 {
	return int64(capnp.Struct(s).Uint64(0))
}

func (s Yield) SetRequestID(v int64) {
	capnp.Struct(s).SetUint64(0, uint64(v))
}

// Yield_List is a list of Yield.
type Yield_List = capnp.StructList[Yield]

// NewYield creates a new list of Yield.
func NewYield_List(s *capnp.Segment, sz int32) (Yield_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return capnp.StructList[Yield](l), err
}

// Yield_Future is a wrapper for a Yield promised by a client call.
type Yield_Future struct{ *capnp.Future }

func (f Yield_Future) Struct() (Yield, error) {
	p, err := f.Future.Ptr()
	return Yield(p.Struct()), err
}
